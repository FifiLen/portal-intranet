@model Intranet.Models.DashboardViewModel
    ViewData["Title"] = "Panel";
@using System.Linq
@using System.Security.Claims

@{
    ViewData["Title"] = "Dashboard";
    Layout = "_Layout";

    /* ────────────── Dane użytkownika ────────────── */
    var userName  = "Gość";
    var userEmail = "";

    if (User.Identity?.IsAuthenticated == true)
    {
        // Imię z claim, fallback → Identity.Name → Użytkownik
        userName = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.GivenName)?.Value
                   ?? User.Identity.Name
                   ?? "Użytkownik";

        // userEmail = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)?.Value ?? "";
    }

    /* Ostatnie logowanie — tu podaj z bazy / cookies, jeżeli przechowujesz */
    var lastLoginDateString = User.Identity?.IsAuthenticated == true ? "13.04.2025, 08:15" : "";
}

<div class="container-fluid py-4">
    <!-- Nagłówek strony -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">@ViewData["Title"]</h1>
            @if (User.Identity?.IsAuthenticated == true)
            {
                <p class="text-muted">
                    Witaj, @userName.
                    @if (!string.IsNullOrEmpty(lastLoginDateString))
                    {
                        @:Ostatnie logowanie: @lastLoginDateString
                    }
                </p>
            }
        </div>
        <div>
            <span class="badge bg-primary me-2">Sklep: Warszawa&nbsp;Centrum</span>
            @if (User.IsInRole("Admin"))
            {
                <a asp-controller="PortalTexts" asp-action="Index" class="btn btn-sm btn-dark me-2">
                    <i class="bi bi-pencil-square"></i> Teksty
                </a>
            }
            <button class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-gear"></i> Ustawienia
            </button>
        </div>
    </div>

    <!-- Kafle statystyk -->
    <div class="row g-3 mb-4">
        <!-- Dzisiejsza sprzedaż -->
        <div class="col-md-3">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-1">Dzisiejsza sprzedaż</h6>
                            <h3 class="mb-0">@Model.DzisiejszaSprzedaz</h3>
                            <small class="text-success">
                                <i class="bi bi-arrow-up"></i> 12% więcej niż wczoraj
                            </small>
                        </div>
                        <div class="bg-primary bg-opacity-10 p-3 rounded">
                            <i class="bi bi-cart text-primary fs-3"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Zamówienia do realizacji -->
        <div class="col-md-3">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-1">Zamówienia do realizacji</h6>
                            <h3 class="mb-0">@Model.ZamowieniaDoRealizacji</h3>
                            <small class="text-danger">
                                <i class="bi bi-arrow-up"></i> 3 nowe od wczoraj
                            </small>
                        </div>
                        <div class="bg-warning bg-opacity-10 p-3 rounded">
                            <i class="bi bi-box-seam text-warning fs-3"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Produkty na wyczerpaniu -->
        <div class="col-md-3">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-1">Produkty na wyczerpaniu</h6>
                            <h3 class="mb-0">@Model.ProduktyNaWyczerpaniu</h3>
                            <small class="text-danger">
                                <i class="bi bi-exclamation-triangle"></i> Wymaga uwagi
                            </small>
                        </div>
                        <div class="bg-danger bg-opacity-10 p-3 rounded">
                            <i class="bi bi-archive text-danger fs-3"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Dzisiejsi klienci -->
        <div class="col-md-3">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-1">Dzisiejsi klienci</h6>
                            <h3 class="mb-0">@Model.DzisiejsiKlienci</h3>
                            <small class="text-success">
                                <i class="bi bi-arrow-up"></i> 8% więcej niż wczoraj
                            </small>
                        </div>
                        <div class="bg-success bg-opacity-10 p-3 rounded">
                            <i class="bi bi-people text-success fs-3"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Ostatnie zamówienia + sprzedaż tygodniowa -->
    <div class="row g-4">
        <div class="col-lg-8">
            <!-- Ostatnie zamówienia -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Ostatnie zamówienia</h5>
                    <a asp-controller="Zamowienia" asp-action="Index" class="btn btn-sm btn-outline-primary">Zobacz wszystkie</a>
                </div>
                <div class="card-body p-0">
                    @if (Model.OstatnieZamowienia?.Any() == true)
                    {
                        <div class="table-responsive">
                            <table class="table table-hover align-middle mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>ID</th>
                                        <th>Klient</th>
                                        <th>Status</th>
                                        <th>Data</th>
                                        <th>Wartość</th>
                                        <th>Akcje</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var zamowienie in Model.OstatnieZamowienia)
                                    {
                                        <tr>
                                            <td>#ORD-@zamowienie.Id</td>
                                            <td>@zamowienie.ImieZamawiajacego @zamowienie.NazwiskoZamawiajacego</td>
                                            <td>
                                                @{
                                                    var status = zamowienie.Status;
                                                    var badge  = status switch
                                                    {
                                                        StatusZamowienia.Nowe             or StatusZamowienia.PrzyjeteDoRealizacji => "bg-info text-dark",
                                                        StatusZamowienia.WRealizacji      => "bg-warning text-dark",
                                                        StatusZamowienia.Wyslane          => "bg-primary",
                                                        StatusZamowienia.Zrealizowane     => "bg-success",
                                                        StatusZamowienia.Anulowane        => "bg-danger",
                                                        _                                  => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @badge">@Html.DisplayFor(_ => status)</span>
                                            </td>
                                            <td>@zamowienie.DataZlozenia:dd.MM.yyyy</td>
                                            <td class="text-end">
                                                @zamowienie.LacznaWartosc.ToString("C", new System.Globalization.CultureInfo("pl-PL"))
                                            </td>
                                            <td>
                                                <a asp-controller="Zamowienia" asp-action="Details" asp-route-id="@zamowienie.Id"
                                                   class="btn btn-sm btn-outline-secondary" title="Szczegóły">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <a asp-controller="Zamowienia" asp-action="Edit" asp-route-id="@zamowienie.Id"
                                                   class="btn btn-sm btn-outline-primary ms-1" title="Edytuj">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="p-3 text-center text-muted">Brak ostatnich zamówień do wyświetlenia.</div>
                    }
                </div>
            </div>

            <!-- Wykres sprzedaży -->
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0">Sprzedaż w ostatnim tygodniu</h5>
                </div>
                <div class="card-body">
                    @if (Model.SprzedazTygodniowaChartData?.Labels.Any() == true)
                    {
                        <div class="chart-container" style="position:relative;height:300px;width:100%">
                            <canvas id="salesChart"></canvas>
                        </div>
                    }
                    else
                    {
                        <div class="bg-light rounded d-flex align-items-center justify-content-center" style="height: 300px;">
                            <div class="text-center text-muted">
                                <i class="bi bi-bar-chart-line fs-1"></i>
                                <p class="mt-2">Brak danych do wyświetlenia wykresu sprzedaży tygodniowej.</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Prawa kolumna: Ogłoszenia, Zadania, Wydarzenia -->
        <div class="col-lg-4">
            <!-- Ogłoszenia -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Ogłoszenia</h5>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-controller="Ogloszenia" asp-action="Create" class="btn btn-sm btn-outline-success">
                            <i class="bi bi-plus-circle"></i> Dodaj nowe
                        </a>
                    }
                </div>
                <div class="card-body">
                    @if (Model.Ogloszenia?.Any() == true)
                    {
                        @foreach (var ogloszenie in Model.Ogloszenia)
                        {
                            var alertClass = ogloszenie.Typ switch
                            {
                                TypOgloszenia.Informacja       => "alert-info",
                                TypOgloszenia.Sukces           => "alert-success",
                                TypOgloszenia.Ostrzezenie       => "alert-warning",
                                TypOgloszenia.Niebezpieczenstwo => "alert-danger",
                                _                               => "alert-secondary"
                            };
                            <div class="alert @alertClass @(ogloszenie == Model.Ogloszenia.Last() ? "mb-0" : "mb-3")">
                                <h6 class="alert-heading">@ogloszenie.Tytul</h6>
                                <p class="mb-0">@ogloszenie.Tresc</p>
                                <small class="text-muted">
                                    @ogloszenie.DataPublikacji:dd.MM.yyyy – @ogloszenie.Dzial
                                </small>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">Brak aktualnych ogłoszeń.</p>
                    }
                </div>
            </div>

            <!-- Moje zadania -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Moje zadania</h5>
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <a asp-controller="Zadania" asp-action="Create" class="btn btn-sm btn-outline-primary">
                            <i class="bi bi-plus"></i> Dodaj
                        </a>
                    }
                </div>
                <div class="card-body">
                    @if (Model.MojeZadania?.Any() == true)
                    {
                        @foreach (var zadanie in Model.MojeZadania)
                        {
                            var today  = DateTime.Today;
                            var termin = zadanie.TerminWykonania;

                            string terminText   = termin?.ToString("dd.MM.yyyy") ?? "";
                            string terminColor  = "text-muted";

                            if (termin.HasValue && !zadanie.CzyWykonane)
                            {
                                if (termin.Value.Date < today)             terminColor = "text-danger fw-bold";
                                else if (termin.Value.Date == today)       { terminText = "Dziś";  terminColor = "text-danger"; }
                                else if (termin.Value.Date == today.AddDays(1)) { terminText = "Jutro"; terminColor = "text-warning"; }
                            }

                            <div class="form-check mb-3 d-flex align-items-center justify-content-between">
                                <div class="flex-grow-1">
                                    <form asp-controller="Zadania" asp-action="ToggleWykonane" asp-route-id="@zadanie.Id"
                                          method="post" class="d-inline me-2" onchange="this.submit()">
                                        @Html.AntiForgeryToken()
                                        <input class="form-check-input" type="checkbox" id="task-@zadanie.Id"
                                               name="czyWykonane" value="true" checked="@zadanie.CzyWykonane" />
                                        <label class="form-check-label @(zadanie.CzyWykonane ? "text-muted text-decoration-line-through" : "")"
                                               for="task-@zadanie.Id">@zadanie.Tytul</label>
                                    </form>
                                </div>
                                <div class="text-nowrap">
                                    @if (termin.HasValue)
                                    {
                                        <small class="@terminColor me-2">@terminText</small>
                                    }
                                    @if (zadanie.CzyWykonane || User.IsInRole("Admin"))
                                    {
                                        <form asp-controller="Zadania" asp-action="Delete" asp-route-id="@zadanie.Id"
                                              method="post" class="d-inline"
                                              onsubmit="return confirm('Czy na pewno chcesz usunąć to zadanie?');">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-sm btn-outline-danger p-0 px-1" title="Usuń zadanie">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">Brak przypisanych zadań do wykonania.</p>
                    }
                </div>
            </div>

            <!-- Nadchodzące wydarzenia -->
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0">Nadchodzące wydarzenia</h5>
                </div>
                <div class="card-body">
                    @if (Model.NadchodzaceWydarzenia?.Any() == true)
                    {
                        @foreach (var w in Model.NadchodzaceWydarzenia)
                        {
                            var bgColorClass = w.Typ switch
                            {
                                TypWydarzenia.Szkolenie       => "bg-primary",
                                TypWydarzenia.Inwentaryzacja  => "bg-danger",
                                TypWydarzenia.Spotkanie       => "bg-success",
                                TypWydarzenia.Konferencja     => "bg-info",
                                TypWydarzenia.Firmowe         => "bg-purple",
                                _                             => "bg-secondary"
                            };

                            <div class="d-flex @(w == Model.NadchodzaceWydarzenia.Last() ? "" : "mb-3")">
                                <div class="flex-shrink-0 @bgColorClass bg-opacity-10 p-2 rounded text-center" style="width:60px;">
                                    <div class="fw-bold">@w.DataRozpoczecia:dd</div>
                                    <small>@w.DataRozpoczecia.ToString("MMM", new System.Globalization.CultureInfo("pl-PL")).ToUpper()</small>
                                </div>
                                <div class="ms-3">
                                    <h6 class="mb-1">@w.Nazwa</h6>
                                    <p class="text-muted small mb-0">
                                        @w.DataRozpoczecia:HH\\:mm
                                        @if (w.DataZakonczenia.HasValue)
                                        {
                                            if (w.DataZakonczenia.Value.Date == w.DataRozpoczecia.Date)
                                            {
                                                @: - @w.DataZakonczenia.Value:HH\\:mm
                                            }
                                            else
                                            {
                                                @: - @w.DataZakonczenia.Value:dd.MM HH\\:mm
                                            }
                                        }
                                        @if (!string.IsNullOrEmpty(w.Lokalizacja))
                                        {
                                            @:, @w.Lokalizacja
                                        }
                                    </p>
                                    @if (!string.IsNullOrEmpty(w.Opis))
                                    {
                                        <p class="text-muted small fst-italic mb-0">@w.Opis</p>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">Brak nadchodzących wydarzeń.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @if (Model.SprzedazTygodniowaChartData?.Labels.Any() == true)
    {
        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const ctx = document.getElementById('salesChart');
                if (!ctx) return;

                new Chart(ctx.getContext('2d'), {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.SprzedazTygodniowaChartData.Labels)),
                        datasets: [{
                            label: 'Sprzedaż (zł)',
                            data: @Html.Raw(Json.Serialize(Model.SprzedazTygodniowaChartData.Values)),
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.15)',
                            borderWidth: 2,
                            tension: 0.2,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: v => new Intl.NumberFormat('pl-PL', { style: 'currency', currency: 'PLN' }).format(v)
                                }
                            }
                        },
                        plugins: {
                            legend: { display: true, position: 'top' },
                            tooltip: {
                                callbacks: {
                                    label: ctx => new Intl.NumberFormat('pl-PL', { style: 'currency', currency: 'PLN' }).format(ctx.parsed.y)
                                }
                            }
                        }
                    }
                });
            });
        </script>
    }
}
