@model List<FashionStore.Models.ProductModel>
@{
    ViewData["Title"] = $"{PortalTextService.Get("Category_Accessories_Title")} | CIUCHY";
}

<div class="category-page accessories-category-page">
    <!-- Hero section z asymetrycznym układem -->
    <section class="relative h-[70vh] overflow-hidden">
        <div class="absolute inset-0 z-0">
            <div class="absolute inset-0 bg-gradient-to-r from-black/70 to-black/30 z-10"></div>
            <div class="hero-image absolute inset-0 bg-cover bg-center" style="background-image: url('/images/place-holder.jpg');"></div>
        </div>

        <div class="absolute top-1/2 left-1/4 transform -translate-y-1/2 -translate-x-1/4 z-10">
            <div class="max-w-xl">
                <h1 class="text-6xl md:text-8xl font-light text-white tracking-tighter mb-4 hero-title">
                    <span class="block" portal-text="Category_Accessories_Title"></span>
                </h1>
                <div class="w-16 h-1 bg-white mb-6"></div>
                <p class="text-xl text-white/80 mb-8 hero-subtitle max-w-md">
                    <span portal-text="Category_Accessories_Subtitle"></span>
                </p>
            </div>
        </div>

        <div class="absolute bottom-8 right-8 z-10 flex items-center text-white text-sm">
            <span class="mr-2" portal-text="Category_Accessories_Scroll"></span>
            <div class="animate-bounce">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
                </svg>
            </div>
        </div>
    </section>

    <!-- Filtry i produkty w asymetrycznym układzie -->
    <section class="py-16 px-6 md:px-12 lg:px-24 bg-white relative z-10">
        <div class="max-w-7xl mx-auto">
            <!-- Nagłówek z licznikiem produktów i sortowaniem -->
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-12">
                <div class="mb-4 md:mb-0">
                    <h2 class="text-3xl font-light">KOLEKCJA</h2>
                    <p class="text-gray-500 mt-1">Znaleziono @Model.Count produktów</p>
                </div>

                <div class="flex items-center gap-4">
                    <button id="filter-toggle" class="flex items-center gap-2 px-4 py-2 border border-black hover:bg-black hover:text-white transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
                        </svg>
                        FILTRY
                    </button>

                    <div class="relative">
                        <select id="sort-select" class="appearance-none px-4 py-2 pr-8 border border-black bg-transparent focus:outline-none">
                            <option value="newest">NAJNOWSZE</option>
                            <option value="price-asc">CENA: ROSNĄCO</option>
                            <option value="price-desc">CENA: MALEJĄCO</option>
                            <option value="name-asc">NAZWA: A-Z</option>
                        </select>
                        <div class="absolute right-2 top-1/2 transform -translate-y-1/2 pointer-events-none">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                            </svg>
                        </div>
                    </div>

                    <div class="flex border border-black">
                        <button class="px-3 py-2 bg-black text-white">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                            </svg>
                        </button>
                        <button class="px-3 py-2">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7" />
                            </svg>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Panel filtrów - domyślnie ukryty -->
            <div id="filter-panel" class="mb-12 hidden">
                <div class="grid grid-cols-1 md:grid-cols-4 gap-8 p-8 bg-gray-50">
                    <!-- Kategorie -->
                    <div>
                        <h3 class="font-medium mb-4">KATEGORIE</h3>
                        <div class="space-y-2">
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Torebki</span>
                            </label>
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Biżuteria</span>
                            </label>
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Paski</span>
                            </label>
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Szaliki i apaszki</span>
                            </label>
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Czapki i kapelusze</span>
                            </label>
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Portfele</span>
                            </label>
                        </div>
                    </div>

                    <!-- Materiały -->
                    <div>
                        <h3 class="font-medium mb-4">MATERIAŁ</h3>
                        <div class="space-y-2">
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Skóra</span>
                            </label>
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Jedwab</span>
                            </label>
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Wełna</span>
                            </label>
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Bawełna</span>
                            </label>
                            <label class="flex items-center gap-2 cursor-pointer">
                                <input type="checkbox" class="form-checkbox h-4 w-4 text-black rounded-none">
                                <span>Metal</span>
                            </label>
                        </div>
                    </div>

                    <!-- Kolory -->
                    <div>
                        <h3 class="font-medium mb-4">KOLOR</h3>
                        <div class="flex flex-wrap gap-3">
                            <div class="w-8 h-8 rounded-full bg-black cursor-pointer border-2 border-transparent hover:border-gray-400"></div>
                            <div class="w-8 h-8 rounded-full bg-white cursor-pointer border-2 border-gray-300 hover:border-gray-400"></div>
                            <div class="w-8 h-8 rounded-full bg-amber-700 cursor-pointer border-2 border-transparent hover:border-gray-400"></div>
                            <div class="w-8 h-8 rounded-full bg-red-700 cursor-pointer border-2 border-transparent hover:border-gray-400"></div>
                            <div class="w-8 h-8 rounded-full bg-blue-900 cursor-pointer border-2 border-transparent hover:border-gray-400"></div>
                            <div class="w-8 h-8 rounded-full bg-green-800 cursor-pointer border-2 border-transparent hover:border-gray-400"></div>
                            <div class="w-8 h-8 rounded-full bg-yellow-500 cursor-pointer border-2 border-transparent hover:border-gray-400"></div>
                            <div class="w-8 h-8 rounded-full bg-gray-500 cursor-pointer border-2 border-transparent hover:border-gray-400"></div>
                        </div>
                    </div>

                    <!-- Cena -->
                    <div>
                        <h3 class="font-medium mb-4">CENA</h3>
                        <div class="px-2">
                            <div class="relative h-1 bg-gray-300 mb-6">
                                <div class="absolute left-0 right-1/2 h-1 bg-black"></div>
                                <div class="absolute left-0 top-1/2 transform -translate-y-1/2 w-4 h-4 bg-black rounded-full cursor-pointer"></div>
                                <div class="absolute right-1/2 top-1/2 transform -translate-y-1/2 w-4 h-4 bg-black rounded-full cursor-pointer"></div>
                            </div>
                            <div class="flex justify-between text-sm">
                                <span>0 zł</span>
                                <span>1000 zł</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex justify-end mt-4">
                    <button class="px-6 py-2 bg-black text-white hover:bg-gray-800 transition-colors">
                        ZASTOSUJ FILTRY
                    </button>
                </div>
            </div>

            <!-- Asymetryczna siatka produktów -->
            <div class="asymmetric-grid">
                @{
                    // Wyróżnione produkty (większe kafelki)
                    var featuredProducts = Model.Where(p => p.Featured).Take(4).ToList();
                    // Pozostałe produkty
                    var regularProducts = Model.Where(p => !p.Featured || !featuredProducts.Contains(p)).ToList();
                }

                <!-- Pierwszy rząd - asymetryczny -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
                    <!-- Duży produkt po lewej -->
                    @if (featuredProducts.Count > 0)
                    {
                        var product = featuredProducts[0];
                        <div class="md:col-span-2 product-card group">
                            <div class="relative overflow-hidden aspect-[16/9] mb-4">
                                <img src="@product.ImageUrl" alt="@product.Name" class="w-full h-full object-cover object-center transition-transform duration-700 group-hover:scale-105">

                                @if (product.IsNew)
                                {
                                    <div class="absolute top-4 left-4 bg-black text-white text-xs px-3 py-1 font-medium">
                                        NOWOŚĆ
                                    </div>
                                }
                                else if (product.Discount.HasValue)
                                {
                                    <div class="absolute top-4 left-4 bg-red-600 text-white text-xs px-3 py-1 font-medium">
                                        -@product.Discount%
                                    </div>
                                }

                                <div class="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                                    <div class="flex gap-2">
                                        <button type="button" data-product-id="@product.Id" class="add-to-cart-btn bg-white text-black px-4 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300">
                                            DODAJ DO KOSZYKA
                                        </button>
                                        <button class="bg-transparent border border-white text-white px-3 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300 hover:bg-white hover:text-black">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <h3 class="text-lg font-medium">@product.Name</h3>
                            <div class="flex items-center mt-1">
                                @if (product.OldPrice.HasValue)
                                {
                                    <span class="text-gray-400 line-through mr-2">@product.OldPrice.Value.ToString("0.00") zł</span>
                                    <span class="text-red-600 font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                                else
                                {
                                    <span class="font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                            </div>
                        </div>
                    }

                    <!-- Mniejszy produkt po prawej -->
                    @if (featuredProducts.Count > 1)
                    {
                        var product = featuredProducts[1];
                        <div class="product-card group">
                            <div class="relative overflow-hidden aspect-[3/4] mb-4">
                                <img src="@product.ImageUrl" alt="@product.Name" class="w-full h-full object-cover object-center transition-transform duration-700 group-hover:scale-105">

                                @if (product.IsNew)
                                {
                                    <div class="absolute top-4 left-4 bg-black text-white text-xs px-3 py-1 font-medium">
                                        NOWOŚĆ
                                    </div>
                                }
                                else if (product.Discount.HasValue)
                                {
                                    <div class="absolute top-4 left-4 bg-red-600 text-white text-xs px-3 py-1 font-medium">
                                        -@product.Discount%
                                    </div>
                                }

                                <div class="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                                    <div class="flex gap-2">
                                        <button type="button" data-product-id="@product.Id" class="add-to-cart-btn bg-white text-black px-4 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300">
                                            DODAJ DO KOSZYKA
                                        </button>
                                        <button class="bg-transparent border border-white text-white px-3 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300 hover:bg-white hover:text-black">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <h3 class="text-lg font-medium">@product.Name</h3>
                            <div class="flex items-center mt-1">
                                @if (product.OldPrice.HasValue)
                                {
                                    <span class="text-gray-400 line-through mr-2">@product.OldPrice.Value.ToString("0.00") zł</span>
                                    <span class="text-red-600 font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                                else
                                {
                                    <span class="font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                            </div>
                        </div>
                    }
                </div>

                <!-- Drugi rząd - asymetryczny w drugą stronę -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
                    <!-- Mniejszy produkt po lewej -->
                    @if (featuredProducts.Count > 2)
                    {
                        var product = featuredProducts[2];
                        <div class="product-card group">
                            <div class="relative overflow-hidden aspect-[3/4] mb-4">
                                <img src="@product.ImageUrl" alt="@product.Name" class="w-full h-full object-cover object-center transition-transform duration-700 group-hover:scale-105">

                                @if (product.IsNew)
                                {
                                    <div class="absolute top-4 left-4 bg-black text-white text-xs px-3 py-1 font-medium">
                                        NOWOŚĆ
                                    </div>
                                }
                                else if (product.Discount.HasValue)
                                {
                                    <div class="absolute top-4 left-4 bg-red-600 text-white text-xs px-3 py-1 font-medium">
                                        -@product.Discount%
                                    </div>
                                }

                                <div class="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                                    <div class="flex gap-2">
                                        <button type="button" data-product-id="@product.Id" class="add-to-cart-btn bg-white text-black px-4 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300">
                                            DODAJ DO KOSZYKA
                                        </button>
                                        <button class="bg-transparent border border-white text-white px-3 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300 hover:bg-white hover:text-black">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <h3 class="text-lg font-medium">@product.Name</h3>
                            <div class="flex items-center mt-1">
                                @if (product.OldPrice.HasValue)
                                {
                                    <span class="text-gray-400 line-through mr-2">@product.OldPrice.Value.ToString("0.00") zł</span>
                                    <span class="text-red-600 font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                                else
                                {
                                    <span class="font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                            </div>
                        </div>
                    }

                    <!-- Duży produkt po prawej -->
                    @if (featuredProducts.Count > 3)
                    {
                        var product = featuredProducts[3];
                        <div class="md:col-span-2 product-card group">
                            <div class="relative overflow-hidden aspect-[16/9] mb-4">
                                <img src="@product.ImageUrl" alt="@product.Name" class="w-full h-full object-cover object-center transition-transform duration-700 group-hover:scale-105">

                                @if (product.IsNew)
                                {
                                    <div class="absolute top-4 left-4 bg-black text-white text-xs px-3 py-1 font-medium">
                                        NOWOŚĆ
                                    </div>
                                }
                                else if (product.Discount.HasValue)
                                {
                                    <div class="absolute top-4 left-4 bg-red-600 text-white text-xs px-3 py-1 font-medium">
                                        -@product.Discount%
                                    </div>
                                }

                                <div class="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                                    <div class="flex gap-2">
                                        <button type="button" data-product-id="@product.Id" class="add-to-cart-btn bg-white text-black px-4 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300">
                                            DODAJ DO KOSZYKA
                                        </button>
                                        <button class="bg-transparent border border-white text-white px-3 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300 hover:bg-white hover:text-black">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <h3 class="text-lg font-medium">@product.Name</h3>
                            <div class="flex items-center mt-1">
                                @if (product.OldPrice.HasValue)
                                {
                                    <span class="text-gray-400 line-through mr-2">@product.OldPrice.Value.ToString("0.00") zł</span>
                                    <span class="text-red-600 font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                                else
                                {
                                    <span class="font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                            </div>
                        </div>
                    }
                </div>

                <!-- Pozostałe produkty w asymetrycznej siatce -->
                <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                    @foreach (var product in regularProducts)
                    {
                        <div class="product-card group">
                            <div class="relative overflow-hidden aspect-[3/4] mb-4">
                                <img src="@product.ImageUrl" alt="@product.Name" class="w-full h-full object-cover object-center transition-transform duration-700 group-hover:scale-105">

                                @if (product.IsNew)
                                {
                                    <div class="absolute top-4 left-4 bg-black text-white text-xs px-3 py-1 font-medium">
                                        NOWOŚĆ
                                    </div>
                                }
                                else if (product.Discount.HasValue)
                                {
                                    <div class="absolute top-4 left-4 bg-red-600 text-white text-xs px-3 py-1 font-medium">
                                        -@product.Discount%
                                    </div>
                                }

                                <div class="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                                    <div class="flex gap-2">
                                        <button type="button" data-product-id="@product.Id" class="add-to-cart-btn bg-white text-black px-4 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300">
                                            DODAJ DO KOSZYKA
                                        </button>
                                        <button class="bg-transparent border border-white text-white px-3 py-2 font-medium transform -translate-y-4 group-hover:translate-y-0 transition-all duration-300 hover:bg-white hover:text-black">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <h3 class="text-lg font-medium">@product.Name</h3>
                            <div class="flex items-center mt-1">
                                @if (product.OldPrice.HasValue)
                                {
                                    <span class="text-gray-400 line-through mr-2">@product.OldPrice.Value.ToString("0.00") zł</span>
                                    <span class="text-red-600 font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                                else
                                {
                                    <span class="font-medium">@product.Price.ToString("0.00") zł</span>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Paginacja -->
            <div class="mt-16 flex justify-center">
                <div class="flex items-center space-x-2">
                    <a href="#" class="w-10 h-10 flex items-center justify-center border border-gray-300 hover:border-black transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                        </svg>
                    </a>
                    <a href="#" class="w-10 h-10 flex items-center justify-center border border-black bg-black text-white">1</a>
                    <a href="#" class="w-10 h-10 flex items-center justify-center border border-gray-300 hover:border-black transition-colors">2</a>
                    <a href="#" class="w-10 h-10 flex items-center justify-center border border-gray-300 hover:border-black transition-colors">3</a>
                    <span class="w-10 h-10 flex items-center justify-center">...</span>
                    <a href="#" class="w-10 h-10 flex items-center justify-center border border-gray-300 hover:border-black transition-colors">8</a>
                    <a href="#" class="w-10 h-10 flex items-center justify-center border border-gray-300 hover:border-black transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- Sekcja z trendem sezonu - asymetryczna -->
    <section class="py-20 relative overflow-hidden">
        <div class="absolute top-0 left-0 w-1/2 h-full bg-gray-100 z-0"></div>
        <div class="absolute top-0 right-0 w-1/2 h-full bg-black z-0"></div>

        <div class="max-w-7xl mx-auto px-6 md:px-12 lg:px-24 relative z-10">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
                <div class="relative">
                    <div class="absolute -top-10 -left-10 w-40 h-40 border-2 border-black"></div>
                    <img src="/images/place-holder.jpg" alt="Trend sezonu" class="relative z-10 w-full">
                </div>

                <div class="text-white">
                    <h2 class="text-4xl md:text-5xl font-light mb-6">TREND SEZONU</h2>
                    <div class="w-16 h-1 bg-white mb-6"></div>
                    <p class="text-white/80 mb-8">
                        Odkryj najnowszy trend sezonu - minimalistyczne akcesoria wykonane z najwyższej jakości materiałów.
                        Nasza kolekcja łączy w sobie elegancję i funkcjonalność, tworząc dodatki, które podkreślą każdą stylizację.
                    </p>
                    <a href="#" class="inline-block px-8 py-4 bg-white text-black font-medium hover:bg-gray-200 transition-colors">
                        ODKRYJ KOLEKCJĘ
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- Newsletter -->
    <section class="py-20 px-6 md:px-12 lg:px-24 bg-gray-100">
        <div class="max-w-7xl mx-auto">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between">
                <div class="mb-8 md:mb-0 md:w-1/2">
                    <h2 class="text-3xl md:text-4xl font-light mb-4">ZAPISZ SIĘ DO NEWSLETTERA</h2>
                    <p class="text-gray-600">Bądź na bieżąco z nowościami i promocjami. Otrzymaj 10% zniżki na pierwsze zakupy.</p>
                </div>

                <div class="md:w-1/2">
                    <form class="flex flex-col sm:flex-row">
                        <input type="email" placeholder="Twój adres e-mail" required
                               class="bg-transparent border-b-2 border-black py-3 px-4 text-black placeholder-gray-500 focus:outline-none focus:border-gray-800 flex-grow">
                        <button type="submit"
                                class="mt-4 sm:mt-0 sm:ml-4 px-8 py-3 bg-black text-white font-medium hover:bg-gray-800 transition-colors whitespace-nowrap">
                            ZAPISZ SIĘ
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Obsługa panelu filtrów
            const filterToggle = document.getElementById('filter-toggle');
            const filterPanel = document.getElementById('filter-panel');

            if (filterToggle && filterPanel) {
                filterToggle.addEventListener('click', function() {
                    if (filterPanel.classList.contains('hidden')) {
                        filterPanel.classList.remove('hidden');
                        // Animacja rozwijania
                        filterPanel.style.maxHeight = '0';
                        filterPanel.style.opacity = '0';
                        filterPanel.style.overflow = 'hidden';
                        filterPanel.style.transition = 'max-height 0.5s ease, opacity 0.3s ease';

                        // Wymuszenie reflow
                        filterPanel.offsetHeight;

                        // Animacja rozwijania
                        filterPanel.style.maxHeight = '1000px';
                        filterPanel.style.opacity = '1';
                    } else {
                        // Animacja zwijania
                        filterPanel.style.maxHeight = '0';
                        filterPanel.style.opacity = '0';

                        // Po zakończeniu animacji ukryj panel
                        setTimeout(function() {
                            filterPanel.classList.add('hidden');
                        }, 500);
                    }
                });
            }

            // Efekt parallax dla hero image
            const handleParallax = function() {
                const scrollPosition = window.pageYOffset;
                const viewportHeight = window.innerHeight;

                // Efekt parallax dla hero image - ograniczony do wysokości sekcji hero
                const heroSection = document.querySelector(".hero-image");
                if (heroSection) {
                    // Ograniczamy efekt tylko do widoczności sekcji hero
                    if (scrollPosition < viewportHeight) {
                        // Mniejszy współczynnik dla subtelniejszego efektu
                        const translateY = Math.min(scrollPosition * 0.05, viewportHeight * 0.2);
                        heroSection.style.transform = `scale(1.1) translateY(${translateY}px)`;
                    }
                }
            };

            // Nasłuchiwanie na przewijanie strony
            window.addEventListener('scroll', handleParallax);

            // Inicjalne wywołanie
            handleParallax();

            // Animacje przy przewijaniu
            const animateOnScroll = function() {
                const elements = document.querySelectorAll('.product-card');

                elements.forEach((element, index) => {
                    const elementPosition = element.getBoundingClientRect().top;
                    const windowHeight = window.innerHeight;

                    if (elementPosition < windowHeight * 0.9) {
                        // Dodaj opóźnienie zależne od indeksu
                        setTimeout(() => {
                            element.classList.add('animate-fade-in');
                        }, index * 100);
                    }
                });
            };

            // Nasłuchiwanie na przewijanie dla animacji
            window.addEventListener('scroll', animateOnScroll);

            // Inicjalne wywołanie
            animateOnScroll();
        });
    </script>
}
